services:
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    env_file: ../.env
    volumes:
      - ../app:/app/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - minio
      - redis
      - qdrant
  bot:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: python -m app.adapters.inbound.tg_bot
    env_file: ../.env
    volumes:
      - ../app:/app/app
    depends_on:
      - backend
    working_dir: /app
  celery_worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: celery -A app.infrastructure.task_queue worker --concurrency=2
    env_file: ../.env
    volumes:
      - ../app:/app/app
    depends_on:
      - redis
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: docs
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  minio:
    image: minio/minio
    command: server /data
    ports:
      - "9000:9000"
    environment:
      MINIO_ROOT_USER: docscan
      MINIO_ROOT_PASSWORD: docscan123
    volumes:
      - miniodata:/data
  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrantdata:/qdrant/storage
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
volumes:
  pgdata:
  miniodata:
  qdrantdata:
