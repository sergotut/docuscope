"""
–¢—Ä–µ–∫–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á Celery –¥–ª—è Telegram-–±–æ—Ç–∞.
"""

import asyncio

import structlog
from aiogram import Bot
from celery.result import AsyncResult

from app.infrastructure.task_queue import celery_app

logger = structlog.get_logger()

# –•—Ä–∞–Ω–∏–º ID –∑–∞–¥–∞—á, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å
task_registry = {}  # task_id -> chat_id


async def track_results(bot: Bot):
    """
    –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–¥–∞—á Celery –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞.

    Args:
        bot (Bot): –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram-–±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.

    –¶–∏–∫–ª–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
    –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
    """
    while True:
        await asyncio.sleep(2)
        finished = []

        for task_id, chat_id in task_registry.items():
            result = AsyncResult(task_id, app=celery_app)
            if result.ready():
                try:
                    output = result.get()
                    summary = output["summary"]
                    await bot.send_message(
                        chat_id, f"üìÑ –ì–æ—Ç–æ–≤–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç:\n\n{summary}"
                    )
                    logger.info("result_sent", user_id=chat_id, task_id=task_id)
                except Exception as e:
                    await bot.send_message(
                        chat_id, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞."
                    )
                    logger.error("result_error", error=str(e), task_id=task_id)
                finished.append(task_id)

        for tid in finished:
            task_registry.pop(tid, None)
